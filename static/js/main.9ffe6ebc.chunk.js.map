{"version":3,"sources":["CreateTask.js","TaskItem.js","TaskList.js","Main.js","App.js","reportWebVitals.js","index.js"],"names":["CreateTask","props","handleChange","event","setState","task","target","value","handleSubmit","preventDefault","state","onSubmit","this","type","placeholder","onChange","autoFocus","className","Component","TaskItem","setEditingState","isEditing","toggleTask","id","deleteTask","editTask","taskItem","onClick","readOnly","checked","isCompleted","React","TaskList","tasks","map","index","localStorage","getItem","JSON","parse","Main","trim","push","setItem","stringify","alert","taskId","splice","class","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPA0BeA,E,kDAtBd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAIPC,aAAe,SAACC,GACf,EAAKC,SAAS,CAAEC,KAAMF,EAAMG,OAAOC,SANjB,EAQnBC,aAAe,SAACL,GACfA,EAAMM,iBACN,EAAKR,MAAMD,WAAW,EAAKU,MAAML,MACjC,EAAKD,SAAS,CAACC,KAAK,MATpB,EAAKK,MAAQ,CAAEL,KAAM,IAFH,E,0CAanB,WACC,OACC,uBAAMM,SAAUC,KAAKJ,aAArB,UACC,uBAAOK,KAAK,OAAOC,YAAY,gBAAgBP,MAAOK,KAAKF,MAAML,KAAMU,SAAUH,KAAKV,aAAcc,WAAS,IAC7G,wBAAQC,UAAU,SAASJ,KAAK,SAAhC,6B,GAlBqBK,aC0FVC,E,kDA1Fb,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IAMRmB,gBAAkB,SAAAC,GAChB,EAAKjB,SAAS,CAAEiB,UAAWA,KARV,EAUnBC,WAAa,WACX,EAAKrB,MAAMqB,WAAW,EAAKrB,MAAMsB,KAXhB,EAanBC,WAAa,WACX,EAAKvB,MAAMuB,WAAW,EAAKvB,MAAMsB,KAdhB,EAgBnBrB,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEC,KAAMF,EAAMG,OAAOC,SAjBlB,EAmBnBC,aAAe,SAAAL,GACbA,EAAMM,iBACN,EAAKR,MAAMwB,SAAS,EAAKxB,MAAMsB,GAAI,EAAKb,MAAML,MAC9C,EAAKD,SAAS,CAAEiB,WAAW,KApB3B,EAAKX,MAAQ,CACXL,KAAM,EAAKJ,MAAMyB,SAASrB,KAC1BgB,WAAW,GAJI,E,0CAwBnB,WAAU,IAAD,OACP,OACE,6BACGT,KAAKF,MAAMW,UACV,qCACE,6BACE,sBAAMV,SAAUC,KAAKJ,aAArB,SACE,uBACED,MAAOK,KAAKF,MAAML,KAClBU,SAAUH,KAAKV,aACfc,WAAS,QAIf,+BACE,wBACEC,UAAU,OACVJ,KAAK,SACLc,QAASf,KAAKJ,aAHhB,kBAOA,wBACES,UAAU,OACVJ,KAAK,SACLc,QAAS,kBAAM,EAAKP,iBAAgB,IAHtC,wBAUJ,qCACE,qBAAIH,UAAU,OAAOU,QAASf,KAAKU,WAAnC,UACE,uBACET,KAAK,WACLe,UAAQ,EACRC,QAASjB,KAAKX,MAAMyB,SAASI,cAE/B,sBACEb,UACEL,KAAKX,MAAMyB,SAASI,YAChB,YACA,gBAJR,SAOGlB,KAAKX,MAAMyB,SAASrB,UAGzB,+BACE,wBACEY,UAAU,OACVU,QAAS,kBAAM,EAAKP,iBAAgB,IAFtC,kBAMA,wBAAQH,UAAU,SAASU,QAASf,KAAKY,WAAzC,uBAGI,a,GApFKO,IAAMb,WC2Bdc,E,4JAzBb,WAAU,IAAD,OACP,OACE,kCACE,gCACE,+BACE,sCACA,8CAGJ,gCACGpB,KAAKX,MAAMgC,MAAMC,KAAI,SAAC7B,EAAM8B,GAAP,OACpB,cAAC,EAAD,CAEET,SAAUrB,EACVkB,GAAIY,EACJX,WAAY,EAAKvB,MAAMuB,WACvBC,SAAU,EAAKxB,MAAMwB,SACrBH,WAAY,EAAKrB,MAAMqB,YALlBa,e,GAbIJ,IAAMb,WCEvBe,G,MAAQG,aAAaC,QAAQ,SAC/BC,KAAKC,MAAMH,aAAaC,QAAQ,UAChC,IAwDWG,E,kDArDb,WAAYvC,GAAQ,IAAD,8BACjB,cAAMA,IAMRD,WAAa,SAAAK,GACS,KAAhBA,EAAKoC,QAITR,EAAMS,KAAK,CAAErC,OAAMyB,aAAa,IAChC,EAAK1B,SAAS,CAAE6B,MAAOA,IACvBG,aAAaO,QAAQ,QAASL,KAAKM,UAAUX,KAL3CY,MAAM,wBATS,EAgBnBvB,WAAa,SAAAwB,GACX,IAAMpB,EAAWO,EAAMa,GACvBpB,EAASI,aAAeJ,EAASI,YACjC,EAAK1B,SAAS,CAAE6B,MAAOA,IACvBG,aAAaO,QAAQ,QAASL,KAAKM,UAAUX,KApB5B,EAsBnBT,WAAa,SAAAsB,GACXb,EAAMc,OAAOD,EAAQ,GACrB,EAAK1C,SAAS,CAAE6B,MAAOA,IACvBG,aAAaO,QAAQ,QAASL,KAAKM,UAAUX,KAzB5B,EA2BnBR,SAAW,SAACqB,EAAQzC,GACD4B,EAAMa,GACdzC,KAAOA,EAChB,EAAKD,SAAS,CAAE6B,MAAOA,IACvBG,aAAaO,QAAQ,QAASL,KAAKM,UAAUX,KA7B7C,EAAKvB,MAAQ,CACXuB,MAAOA,GAHQ,E,0CAiCnB,WACE,OACE,yBAASe,MAAM,UAAf,SACE,sBAAK/B,UAAU,OAAf,UACE,+CACA,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CAAYjB,WAAYY,KAAKZ,aAC7B,uBACA,cAAC,EAAD,CACEiC,MAAOrB,KAAKF,MAAMuB,MAClBT,WAAYZ,KAAKY,WACjBC,SAAUb,KAAKa,SACfH,WAAYV,KAAKU,yB,GA9CZS,IAAMb,WCFV+B,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9ffe6ebc.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\n\r\nclass CreateTask extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { task: '' };\r\n\t}\r\n\r\n\thandleChange = (event) => {\r\n\t\tthis.setState({ task: event.target.value });\r\n\t}\r\n\thandleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.CreateTask(this.state.task)\r\n\t\tthis.setState({task:''})\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t<input type=\"text\" placeholder=\"Create A Task\" value={this.state.task} onChange={this.handleChange} autoFocus />\r\n\t\t\t\t<button className=\"submit\" type=\"submit\">Add Task</button>\r\n\t\t\t</form>\r\n\t\t\t)\r\n\t}\r\n}\r\nexport default CreateTask","import React from \"react\";\r\n\r\nclass TaskItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      task: this.props.taskItem.task,\r\n      isEditing: false\r\n    };\r\n  }\r\n  setEditingState = isEditing => {\r\n    this.setState({ isEditing: isEditing });\r\n  };\r\n  toggleTask = () => {\r\n    this.props.toggleTask(this.props.id);\r\n  };\r\n  deleteTask = () => {\r\n    this.props.deleteTask(this.props.id);\r\n  };\r\n  handleChange = event => {\r\n    this.setState({ task: event.target.value });\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.editTask(this.props.id, this.state.task);\r\n    this.setState({ isEditing: false });\r\n  };\r\n  render() {\r\n    return (\r\n      <tr>\r\n        {this.state.isEditing ? (\r\n          <>\r\n            <td>\r\n              <form onSubmit={this.handleSubmit}>\r\n                <input\r\n                  value={this.state.task}\r\n                  onChange={this.handleChange}\r\n                  autoFocus\r\n                />\r\n              </form>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"save\"\r\n                type=\"submit\"\r\n                onClick={this.handleSubmit}\r\n              >\r\n                Save\r\n              </button>\r\n              <button\r\n                className=\"back\"\r\n                type=\"button\"\r\n                onClick={() => this.setEditingState(false)}\r\n              >\r\n                Back\r\n              </button>\r\n            </td>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <td className=\"task\" onClick={this.toggleTask}>\r\n              <input\r\n                type=\"checkbox\"\r\n                readOnly\r\n                checked={this.props.taskItem.isCompleted}\r\n              />\r\n              <span\r\n                className={\r\n                  this.props.taskItem.isCompleted\r\n                    ? \"completed\"\r\n                    : \"not-completed\"\r\n                }\r\n              >\r\n                {this.props.taskItem.task}\r\n              </span>\r\n            </td>\r\n            <td>\r\n              <button\r\n                className=\"edit\"\r\n                onClick={() => this.setEditingState(true)}\r\n              >\r\n                Edit\r\n              </button>\r\n              <button className=\"delete\" onClick={this.deleteTask}>\r\n                Delete\r\n              </button>\r\n            </td>{\" \"}\r\n          </>\r\n        )}\r\n      </tr>\r\n    );\r\n  }\r\n}\r\nexport default TaskItem;\r\n","import React from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nclass TaskList extends React.Component {\r\n  render() {\r\n    return (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Task</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.tasks.map((task, index) => (\r\n            <TaskItem\r\n              key={index}\r\n              taskItem={task}\r\n              id={index}\r\n              deleteTask={this.props.deleteTask}\r\n              editTask={this.props.editTask}\r\n              toggleTask={this.props.toggleTask}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\nexport default TaskList;\r\n","import React from \"react\";\r\nimport CreateTask from \"./CreateTask\";\r\nimport TaskList from \"./TaskList\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\n\r\nconst tasks = localStorage.getItem(\"tasks\")\r\n  ? JSON.parse(localStorage.getItem(\"tasks\"))\r\n  : [];\r\n\r\nclass Main extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: tasks\r\n    };\r\n  }\r\n\r\n  CreateTask = task => {\r\n    if (task.trim() === \"\") {\r\n      alert(\"Please input a task\");\r\n      return;\r\n    }\r\n    tasks.push({ task, isCompleted: false });\r\n    this.setState({ tasks: tasks });\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  };\r\n  toggleTask = taskId => {\r\n    const taskItem = tasks[taskId];\r\n    taskItem.isCompleted = !taskItem.isCompleted;\r\n    this.setState({ tasks: tasks });\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  };\r\n  deleteTask = taskId => {\r\n    tasks.splice(taskId, 1);\r\n    this.setState({ tasks: tasks });\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  };\r\n  editTask = (taskId, task) => {\r\n    const taskItem = tasks[taskId];\r\n    taskItem.task = task;\r\n    this.setState({ tasks: tasks });\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  };\r\n  render() {\r\n    return (\r\n      <article class=\"wrapper\">\r\n        <div className=\"main\">\r\n          <h1>Todo List App</h1>\r\n          <div className=\"content\">\r\n            <CreateTask CreateTask={this.CreateTask} />\r\n            <br />\r\n            <TaskList\r\n              tasks={this.state.tasks}\r\n              deleteTask={this.deleteTask}\r\n              editTask={this.editTask}\r\n              toggleTask={this.toggleTask}\r\n            />\r\n          </div>\r\n        </div>\r\n      </article>\r\n    );\r\n  }\r\n}\r\nexport default Main;\r\n","import \"./App.css\";\nimport Main from \"./Main\";\n\nfunction App() {\n  return <Main />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}